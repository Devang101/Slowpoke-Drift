Shader.source[document.currentScript.src.split('js/shaders/')[1]] = `
precision highp float;

varying vec2 texCoord;
varying vec3 worldNormal;
varying vec3 worldPos;

uniform sampler2D colorTexture;
uniform vec4 lightPos[2];
uniform vec4 lightPowerDensity[2];
uniform vec4 spotlightDir[2];

void main(void) {
  vec3 light = vec3(0,0,0);
  vec3 normal = normalize(worldNormal);
  vec3 kd = texture2D(colorTexture, texCoord).xyz;
  vec3 m;

  for(int i=0; i<2; i++){
    vec3 lightDirection = lightPos[i].xyz - (worldPos * lightPos[i].w);
    float cosTheta = dot(normalize(lightDirection), normal);
    if(cosTheta < 0.0){
      cosTheta = 0.0;
    }
    if(lightPos[i].w == 0.0){
      m = lightPowerDensity[i].xyz / pow(length(normalize(lightDirection)), 2.0);
    }
    else{
      m = lightPowerDensity[i].xyz / pow(length(lightDirection), 2.0);
      m = m * dot(normalize(spotlightDir[i].xyz), normalize(lightDirection*-1.0));
    }
    light = light + (m * kd * cosTheta);

    vec3 h = normalize((normalize(light) + normalize(lightDirection))/2.0);
    float shineDot = dot(normal, h);
    if(shineDot > 0.0){
      light += m * kd * pow(shineDot,10.0);
    }
  }

  gl_FragColor = vec4(light,1);
}
`;
